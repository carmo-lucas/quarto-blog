{
  "hash": "b7310d36b2ca60170292221103c55e45",
  "result": {
    "markdown": "---\nauthor: \"Lucas Carmo\"\ntitle: \"Primeira postagem\"\nsubtitle: \"Uma primeira impressão do quarto e quais as minhas intenções\"\nformat: html\ndate: 2022-05-31\ncategories: [blog, teste]\n---\n\n\n# Intro\n\nEsta é a primeira vez que eu estou usando o `quarto` para escrita de blogs.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- \"lucas\"\n\nimprimir_nome <- function(nome) print(x)\n\nimprimir_nome(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"lucas\"\n```\n:::\n:::\n\n\n# Equações\n\n\n$$ \\LaTeX $$\n\n$$ e = mc^2$$\n\n\n$\\frac{\\alpha}{\\beta}$ \n\n\n{{< shortcodes >}}\n\n\n{{< meta subtitle >}}\n\n\n\n:::{.callout-tip collapse=\"true\"}\n\ndefault callout é a melhor forma de escrever callouts que não ficam ocupando muito espaço\n\n:::\n\n\n:::{.panel-tabset}\n\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nx <- 19\n```\n:::\n\n\n\n## Python\n\n\n::: {.cell}\n\n```{.pyhon .cell-code  code-fold=\"false\"}\nx = 20\n```\n:::\n\n\n## Julia\n\n\n::: {.cell}\n\n```{.pyhon .cell-code  code-fold=\"false\"}\nx = 20\n```\n:::\n\n\n\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}